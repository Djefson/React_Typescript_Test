{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jophy\\\\Documents\\\\god-frontend-code-test\\\\src\\\\components\\\\learn\\\\index.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Text } from \"vcc-ui\";\nimport { CarInfo } from \"components/carInfo\";\nimport { carsService } from \"services\";\nimport { useParams } from \"react-router-dom\";\nexport const Learn = () => {\n  let params = useParams();\n  let carInfo = {};\n  const [car, setCar] = useState(carInfo);\n  useEffect(() => {\n    const getCars = async () => {\n      const carData = await carsService.getCar(params.id);\n      setCar(carData);\n    };\n\n    getCars();\n  }, [params.id]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {\n    extend: {\n      textAlign: \"center\"\n    },\n    variant: \"hillary\",\n    subStyle: \"emphasis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"Learn About \", car.modelName), (car === null || car === void 0 ? void 0 : car.id) && /*#__PURE__*/React.createElement(CarInfo, {\n    car: car,\n    hideLearnButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 19\n    }\n  }));\n};","map":{"version":3,"sources":["C:/Users/jophy/Documents/god-frontend-code-test/src/components/learn/index.tsx"],"names":["React","useEffect","useState","Text","CarInfo","carsService","useParams","Learn","params","carInfo","car","setCar","getCars","carData","getCar","id","textAlign","modelName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,WAAT,QAA4B,UAA5B;AAEA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;AACzB,MAAIC,MAAM,GAAGF,SAAS,EAAtB;AACA,MAAIG,OAAO,GAAG,EAAd;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAOO,OAAP,CAA9B;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,OAAO,GAAG,YAAY;AAC1B,YAAMC,OAAY,GAAG,MAAMR,WAAW,CAACS,MAAZ,CAAmBN,MAAM,CAACO,EAA1B,CAA3B;AACAJ,MAAAA,MAAM,CAACE,OAAD,CAAN;AACD,KAHD;;AAIAD,IAAAA,OAAO;AACR,GANQ,EAMN,CAACJ,MAAM,CAACO,EAAR,CANM,CAAT;AAQA,sBACE,uDACE,oBAAC,IAAD;AACE,IAAA,MAAM,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KADV;AAEE,IAAA,OAAO,EAAC,SAFV;AAGE,IAAA,QAAQ,EAAC,UAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAKeN,GAAG,CAACO,SALnB,CADF,EAQG,CAAAP,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEK,EAAL,kBAAW,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEL,GAAd;AAAmB,IAAA,eAAe,EAAE,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARd,CADF;AAYD,CAzBM","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Text } from \"vcc-ui\";\r\nimport { CarInfo } from \"components/carInfo\";\r\nimport { carsService } from \"services\";\r\nimport { ICar } from \"types/cars\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport const Learn = () => {\r\n  let params = useParams<{ id: string }>();\r\n  let carInfo = {} as ICar;\r\n  const [car, setCar] = useState<ICar>(carInfo);\r\n\r\n  useEffect(() => {\r\n    const getCars = async () => {\r\n      const carData: any = await carsService.getCar(params.id);\r\n      setCar(carData);\r\n    };\r\n    getCars();\r\n  }, [params.id]);\r\n\r\n  return (\r\n    <>\r\n      <Text\r\n        extend={{ textAlign: \"center\" }}\r\n        variant=\"hillary\"\r\n        subStyle=\"emphasis\"\r\n      >\r\n        Learn About {car.modelName}\r\n      </Text>\r\n      {car?.id && <CarInfo car={car} hideLearnButton={true} />}\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}