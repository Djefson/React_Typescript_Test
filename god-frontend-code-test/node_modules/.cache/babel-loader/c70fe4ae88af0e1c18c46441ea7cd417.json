{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Block } from '../block';\nimport { getLinkRel } from '../../helpers';\nimport { useConfig } from '../../config/use-config';\nvar buttonResetStyle = {\n  background: 'none',\n  margin: 0,\n  padding: 0,\n  textAlign: 'left',\n  cursor: 'pointer',\n  appearance: 'none',\n  borderWidth: 0,\n  touchAction: 'manipulation',\n  '::-moz-focus-inner': {\n    borderWidth: 0,\n    padding: 0\n  }\n};\nvar linkResetStyle = {\n  textDecoration: 'none'\n};\nexport var Click = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      extend = _ref.extend,\n      href = _ref.href,\n      disabled = _ref.disabled,\n      onClick = _ref.onClick,\n      props = _objectWithoutProperties(_ref, [\"children\", \"extend\", \"href\", \"disabled\", \"onClick\"]);\n\n  var config = useConfig();\n  var hasHref = typeof href === 'string';\n  var as = hasHref ? config.linkComponent : 'button';\n  var rel = getLinkRel(props);\n  return /*#__PURE__*/React.createElement(Block, _extends({}, props, {\n    disabled: as === 'button' && disabled,\n    href: !disabled && hasHref ? href : undefined,\n    onClick: !disabled && onClick ? onClick : undefined,\n    ref: ref,\n    as: as,\n    rel: rel,\n    type: as === 'button' ? props.type || 'button' : null,\n    extend: [{\n      boxSizing: 'border-box'\n    }, as === 'button' ? buttonResetStyle : linkResetStyle, extend]\n  }), children);\n});\nClick.displayName = 'Click';\nClick.propTypes = {\n  /** An object containing valid CSS style declarations */\n  extend: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.array]),\n\n  /** Setting an href attribute will force the component to render with an `<a>` tag */\n  href: PropTypes.string,\n\n  /** If rendering a button (by not supplying an href), this let's you provide a type attribute for that button */\n  type: PropTypes.string,\n\n  /** A JSX node */\n  children: PropTypes.node,\n\n  /** Set the Click to disabled */\n  disabled: PropTypes.bool,\n\n  /** An action that is fired on click */\n  onClick: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/jophy/Documents/volvo-cars/node_modules/vcc-ui/es/components/click/index.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","Block","getLinkRel","useConfig","buttonResetStyle","background","margin","padding","textAlign","cursor","appearance","borderWidth","touchAction","linkResetStyle","textDecoration","Click","forwardRef","_ref","ref","children","extend","href","disabled","onClick","props","config","hasHref","as","linkComponent","rel","createElement","undefined","type","boxSizing","displayName","propTypes","oneOfType","object","func","array","string","node","bool"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Block } from '../block';\nimport { getLinkRel } from '../../helpers';\nimport { useConfig } from '../../config/use-config';\nvar buttonResetStyle = {\n  background: 'none',\n  margin: 0,\n  padding: 0,\n  textAlign: 'left',\n  cursor: 'pointer',\n  appearance: 'none',\n  borderWidth: 0,\n  touchAction: 'manipulation',\n  '::-moz-focus-inner': {\n    borderWidth: 0,\n    padding: 0\n  }\n};\nvar linkResetStyle = {\n  textDecoration: 'none'\n};\nexport var Click = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      extend = _ref.extend,\n      href = _ref.href,\n      disabled = _ref.disabled,\n      onClick = _ref.onClick,\n      props = _objectWithoutProperties(_ref, [\"children\", \"extend\", \"href\", \"disabled\", \"onClick\"]);\n\n  var config = useConfig();\n  var hasHref = typeof href === 'string';\n  var as = hasHref ? config.linkComponent : 'button';\n  var rel = getLinkRel(props);\n  return /*#__PURE__*/React.createElement(Block, _extends({}, props, {\n    disabled: as === 'button' && disabled,\n    href: !disabled && hasHref ? href : undefined,\n    onClick: !disabled && onClick ? onClick : undefined,\n    ref: ref,\n    as: as,\n    rel: rel,\n    type: as === 'button' ? props.type || 'button' : null,\n    extend: [{\n      boxSizing: 'border-box'\n    }, as === 'button' ? buttonResetStyle : linkResetStyle, extend]\n  }), children);\n});\nClick.displayName = 'Click';\nClick.propTypes = {\n  /** An object containing valid CSS style declarations */\n  extend: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.array]),\n\n  /** Setting an href attribute will force the component to render with an `<a>` tag */\n  href: PropTypes.string,\n\n  /** If rendering a button (by not supplying an href), this let's you provide a type attribute for that button */\n  type: PropTypes.string,\n\n  /** A JSX node */\n  children: PropTypes.node,\n\n  /** Set the Click to disabled */\n  disabled: PropTypes.bool,\n\n  /** An action that is fired on click */\n  onClick: PropTypes.func\n};"]},"metadata":{},"sourceType":"module"}