{"ast":null,"code":"import resolveArrayValue from 'css-in-js-utils/lib/resolveArrayValue';\nimport isPlainObject from 'isobject';\n\nfunction resolveFallbackValues(style) {\n  for (var property in style) {\n    var value = style[property];\n\n    if (Array.isArray(value)) {\n      style[property] = resolveArrayValue(property, value);\n    } else if (isPlainObject(value) && property !== 'fontFace') {\n      style[property] = resolveFallbackValues(value);\n    }\n  }\n\n  return style;\n}\n\nresolveFallbackValues.optimized = function (props) {\n  if (Array.isArray(props.value)) {\n    props.value = resolveArrayValue(props.property, props.value);\n  }\n\n  return props;\n};\n\nexport default (function () {\n  return resolveFallbackValues;\n});","map":{"version":3,"sources":["C:/Users/jophy/Documents/god-frontend-code-test/node_modules/fela-plugin-fallback-value/es/index.js"],"names":["resolveArrayValue","isPlainObject","resolveFallbackValues","style","property","value","Array","isArray","optimized","props"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,uCAA9B;AACA,OAAOC,aAAP,MAA0B,UAA1B;;AAEA,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;AACpC,OAAK,IAAIC,QAAT,IAAqBD,KAArB,EAA4B;AAC1B,QAAIE,KAAK,GAAGF,KAAK,CAACC,QAAD,CAAjB;;AAEA,QAAIE,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAJ,EAA0B;AACxBF,MAAAA,KAAK,CAACC,QAAD,CAAL,GAAkBJ,iBAAiB,CAACI,QAAD,EAAWC,KAAX,CAAnC;AACD,KAFD,MAEO,IAAIJ,aAAa,CAACI,KAAD,CAAb,IAAwBD,QAAQ,KAAK,UAAzC,EAAqD;AAC1DD,MAAAA,KAAK,CAACC,QAAD,CAAL,GAAkBF,qBAAqB,CAACG,KAAD,CAAvC;AACD;AACF;;AAED,SAAOF,KAAP;AACD;;AAEDD,qBAAqB,CAACM,SAAtB,GAAkC,UAAUC,KAAV,EAAiB;AACjD,MAAIH,KAAK,CAACC,OAAN,CAAcE,KAAK,CAACJ,KAApB,CAAJ,EAAgC;AAC9BI,IAAAA,KAAK,CAACJ,KAAN,GAAcL,iBAAiB,CAACS,KAAK,CAACL,QAAP,EAAiBK,KAAK,CAACJ,KAAvB,CAA/B;AACD;;AAED,SAAOI,KAAP;AACD,CAND;;AAQA,gBAAgB,YAAY;AAC1B,SAAOP,qBAAP;AACD,CAFD","sourcesContent":["import resolveArrayValue from 'css-in-js-utils/lib/resolveArrayValue';\nimport isPlainObject from 'isobject';\n\nfunction resolveFallbackValues(style) {\n  for (var property in style) {\n    var value = style[property];\n\n    if (Array.isArray(value)) {\n      style[property] = resolveArrayValue(property, value);\n    } else if (isPlainObject(value) && property !== 'fontFace') {\n      style[property] = resolveFallbackValues(value);\n    }\n  }\n\n  return style;\n}\n\nresolveFallbackValues.optimized = function (props) {\n  if (Array.isArray(props.value)) {\n    props.value = resolveArrayValue(props.property, props.value);\n  }\n\n  return props;\n};\n\nexport default (function () {\n  return resolveFallbackValues;\n});"]},"metadata":{},"sourceType":"module"}