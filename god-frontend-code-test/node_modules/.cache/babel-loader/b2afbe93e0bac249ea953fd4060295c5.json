{"ast":null,"code":"/*!\n * Deep merge two or more objects together.\n * (c) 2019 Chris Ferdinandi, MIT License, https://gomakethings.com\n * @param   {Object}   objects  The objects to merge together\n * @returns {Object}            Merged values of defaults and options\n */\nexport function merge() {\n  // Setup merged object\n  var newObj = {}; // Merge the object into the newObj object\n\n  var innerMerge = function innerMerge(obj) {\n    for (var prop in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n        // If property is an object, merge properties\n        if (Object.prototype.toString.call(obj[prop]) === '[object Object]') {\n          newObj[prop] = merge(newObj[prop], obj[prop]);\n        } else {\n          newObj[prop] = obj[prop];\n        }\n      }\n    }\n  }; // Loop through each object and conduct a merge\n\n\n  for (var i = 0; i < arguments.length; i++) {\n    innerMerge(arguments[i]);\n  }\n\n  return newObj;\n}","map":{"version":3,"sources":["C:/Users/jophy/Documents/god-frontend-code-test/node_modules/vcc-ui/es/merge.js"],"names":["merge","newObj","innerMerge","obj","prop","Object","prototype","hasOwnProperty","call","toString","i","arguments","length"],"mappings":"AAAA;;;;;;AAMA,OAAO,SAASA,KAAT,GAAiB;AACtB;AACA,MAAIC,MAAM,GAAG,EAAb,CAFsB,CAEL;;AAEjB,MAAIC,UAAU,GAAG,SAASA,UAAT,CAAoBC,GAApB,EAAyB;AACxC,SAAK,IAAIC,IAAT,IAAiBD,GAAjB,EAAsB;AACpB,UAAIE,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCL,GAArC,EAA0CC,IAA1C,CAAJ,EAAqD;AACnD;AACA,YAAIC,MAAM,CAACC,SAAP,CAAiBG,QAAjB,CAA0BD,IAA1B,CAA+BL,GAAG,CAACC,IAAD,CAAlC,MAA8C,iBAAlD,EAAqE;AACnEH,UAAAA,MAAM,CAACG,IAAD,CAAN,GAAeJ,KAAK,CAACC,MAAM,CAACG,IAAD,CAAP,EAAeD,GAAG,CAACC,IAAD,CAAlB,CAApB;AACD,SAFD,MAEO;AACLH,UAAAA,MAAM,CAACG,IAAD,CAAN,GAAeD,GAAG,CAACC,IAAD,CAAlB;AACD;AACF;AACF;AACF,GAXD,CAJsB,CAenB;;;AAGH,OAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AACzCR,IAAAA,UAAU,CAACS,SAAS,CAACD,CAAD,CAAV,CAAV;AACD;;AAED,SAAOT,MAAP;AACD","sourcesContent":["/*!\n * Deep merge two or more objects together.\n * (c) 2019 Chris Ferdinandi, MIT License, https://gomakethings.com\n * @param   {Object}   objects  The objects to merge together\n * @returns {Object}            Merged values of defaults and options\n */\nexport function merge() {\n  // Setup merged object\n  var newObj = {}; // Merge the object into the newObj object\n\n  var innerMerge = function innerMerge(obj) {\n    for (var prop in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n        // If property is an object, merge properties\n        if (Object.prototype.toString.call(obj[prop]) === '[object Object]') {\n          newObj[prop] = merge(newObj[prop], obj[prop]);\n        } else {\n          newObj[prop] = obj[prop];\n        }\n      }\n    }\n  }; // Loop through each object and conduct a merge\n\n\n  for (var i = 0; i < arguments.length; i++) {\n    innerMerge(arguments[i]);\n  }\n\n  return newObj;\n}"]},"metadata":{},"sourceType":"module"}