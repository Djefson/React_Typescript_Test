{"ast":null,"code":"/**\n * Detect type of device\n * From stackoverflow: https://stackoverflow.com/a/4819886\n *\n * @returns bool\n */\nexport var isTouchDevice = function isTouchDevice() {\n  var prefixes = ' -webkit- -moz- -o- -ms- '.split(' ');\n\n  var matchedQueries = function matchedQueries(query) {\n    return window.matchMedia(query).matches;\n  };\n\n  if ('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch) {\n    return true;\n  } // include the 'heartz' as a way to have a non matching MQ to help terminate the join\n  // https://git.io/vznFH\n\n\n  var query = ['(', prefixes.join('touch-enabled),('), 'heartz', ')'].join('');\n  return matchedQueries(query);\n};\n/**\n * Takes link component props and returns a recommended `rel` value.\n *\n * @see https://developers.google.com/web/tools/lighthouse/audits/noopener\n */\n\nexport var getLinkRel = function getLinkRel(_ref) {\n  var href = _ref.href,\n      target = _ref.target,\n      rel = _ref.rel;\n\n  if (!href || target !== '_blank') {\n    return rel;\n  }\n\n  var isCrossOrigin;\n\n  try {\n    // Fails in environments without URL support (like IE11 and in SSR)\n    isCrossOrigin = new URL(href).host !== window.location.host;\n  } catch (_unused) {\n    isCrossOrigin = /^http/i.test(href);\n  }\n\n  var needsNoopener = isCrossOrigin && !/\\bopener\\b/.test(rel) && !/no(opener|referrer)/.test(rel);\n  return needsNoopener ? \"\".concat(rel || '', \" noopener\").trim() : rel;\n};","map":{"version":3,"sources":["C:/Users/jophy/Documents/god-frontend-code-test/node_modules/vcc-ui/es/helpers.js"],"names":["isTouchDevice","prefixes","split","matchedQueries","query","window","matchMedia","matches","DocumentTouch","document","join","getLinkRel","_ref","href","target","rel","isCrossOrigin","URL","host","location","_unused","test","needsNoopener","concat","trim"],"mappings":"AAAA;;;;;;AAMA,OAAO,IAAIA,aAAa,GAAG,SAASA,aAAT,GAAyB;AAClD,MAAIC,QAAQ,GAAG,4BAA4BC,KAA5B,CAAkC,GAAlC,CAAf;;AAEA,MAAIC,cAAc,GAAG,SAASA,cAAT,CAAwBC,KAAxB,EAA+B;AAClD,WAAOC,MAAM,CAACC,UAAP,CAAkBF,KAAlB,EAAyBG,OAAhC;AACD,GAFD;;AAIA,MAAI,kBAAkBF,MAAlB,IAA4BA,MAAM,CAACG,aAAP,IAAwBC,QAAQ,YAAYJ,MAAM,CAACG,aAAnF,EAAkG;AAChG,WAAO,IAAP;AACD,GATiD,CAShD;AACF;;;AAGA,MAAIJ,KAAK,GAAG,CAAC,GAAD,EAAMH,QAAQ,CAACS,IAAT,CAAc,kBAAd,CAAN,EAAyC,QAAzC,EAAmD,GAAnD,EAAwDA,IAAxD,CAA6D,EAA7D,CAAZ;AACA,SAAOP,cAAc,CAACC,KAAD,CAArB;AACD,CAfM;AAgBP;;;;;;AAMA,OAAO,IAAIO,UAAU,GAAG,SAASA,UAAT,CAAoBC,IAApB,EAA0B;AAChD,MAAIC,IAAI,GAAGD,IAAI,CAACC,IAAhB;AAAA,MACIC,MAAM,GAAGF,IAAI,CAACE,MADlB;AAAA,MAEIC,GAAG,GAAGH,IAAI,CAACG,GAFf;;AAIA,MAAI,CAACF,IAAD,IAASC,MAAM,KAAK,QAAxB,EAAkC;AAChC,WAAOC,GAAP;AACD;;AAED,MAAIC,aAAJ;;AAEA,MAAI;AACF;AACAA,IAAAA,aAAa,GAAG,IAAIC,GAAJ,CAAQJ,IAAR,EAAcK,IAAd,KAAuBb,MAAM,CAACc,QAAP,CAAgBD,IAAvD;AACD,GAHD,CAGE,OAAOE,OAAP,EAAgB;AAChBJ,IAAAA,aAAa,GAAG,SAASK,IAAT,CAAcR,IAAd,CAAhB;AACD;;AAED,MAAIS,aAAa,GAAGN,aAAa,IAAI,CAAC,aAAaK,IAAb,CAAkBN,GAAlB,CAAlB,IAA4C,CAAC,sBAAsBM,IAAtB,CAA2BN,GAA3B,CAAjE;AACA,SAAOO,aAAa,GAAG,GAAGC,MAAH,CAAUR,GAAG,IAAI,EAAjB,EAAqB,WAArB,EAAkCS,IAAlC,EAAH,GAA8CT,GAAlE;AACD,CApBM","sourcesContent":["/**\n * Detect type of device\n * From stackoverflow: https://stackoverflow.com/a/4819886\n *\n * @returns bool\n */\nexport var isTouchDevice = function isTouchDevice() {\n  var prefixes = ' -webkit- -moz- -o- -ms- '.split(' ');\n\n  var matchedQueries = function matchedQueries(query) {\n    return window.matchMedia(query).matches;\n  };\n\n  if ('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch) {\n    return true;\n  } // include the 'heartz' as a way to have a non matching MQ to help terminate the join\n  // https://git.io/vznFH\n\n\n  var query = ['(', prefixes.join('touch-enabled),('), 'heartz', ')'].join('');\n  return matchedQueries(query);\n};\n/**\n * Takes link component props and returns a recommended `rel` value.\n *\n * @see https://developers.google.com/web/tools/lighthouse/audits/noopener\n */\n\nexport var getLinkRel = function getLinkRel(_ref) {\n  var href = _ref.href,\n      target = _ref.target,\n      rel = _ref.rel;\n\n  if (!href || target !== '_blank') {\n    return rel;\n  }\n\n  var isCrossOrigin;\n\n  try {\n    // Fails in environments without URL support (like IE11 and in SSR)\n    isCrossOrigin = new URL(href).host !== window.location.host;\n  } catch (_unused) {\n    isCrossOrigin = /^http/i.test(href);\n  }\n\n  var needsNoopener = isCrossOrigin && !/\\bopener\\b/.test(rel) && !/no(opener|referrer)/.test(rel);\n  return needsNoopener ? \"\".concat(rel || '', \" noopener\").trim() : rel;\n};"]},"metadata":{},"sourceType":"module"}