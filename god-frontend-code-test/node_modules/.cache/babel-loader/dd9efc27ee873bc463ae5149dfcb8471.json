{"ast":null,"code":"var _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nimport { RULE_TYPE, generateDeclarationReference } from 'fela-utils';\nimport { camelCaseProperty } from 'css-in-js-utils';\nimport generateCacheEntry from './generateCacheEntry'; // Escaping for RegExp taken from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Escaping\n\nfunction escapeRegExp(string) {\n  return string.replace(/[.*+\\-?^${}()|[\\]\\\\]/g, '\\\\$&');\n} // we reuse regexes for improved performance\n\n\nvar regexMap = {};\n\nfunction getRegex(specificityPrefix) {\n  if (!regexMap[specificityPrefix]) {\n    regexMap[specificityPrefix] = new RegExp(escapeRegExp(specificityPrefix) + '[.]([0-9a-z_-]+)([.][0-9a-z_-]+){0,}([^{]+)?{([^:]+):([^}]+)}', 'gi');\n  }\n\n  return regexMap[specificityPrefix];\n}\n\nexport default function rehydrateRules(css) {\n  var media = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var support = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var cache = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var specificityPrefix = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '';\n  var decl = void 0;\n  var DECL_REGEX = getRegex(specificityPrefix); // This excellent parsing implementation was originally taken from Styletron and modified to fit Fela\n  // https://github.com/rtsao/styletron/blob/master/packages/styletron-client/src/index.js#L47\n\n  /* eslint-disable no-unused-vars,no-cond-assign */\n\n  while (decl = DECL_REGEX.exec(css)) {\n    // $FlowFixMe\n    var _decl = decl,\n        _decl2 = _slicedToArray(_decl, 6),\n        ruleSet = _decl2[0],\n        className = _decl2[1],\n        _ = _decl2[2],\n        pseudo = _decl2[3],\n        property = _decl2[4],\n        value = _decl2[5];\n    /* eslint-enable */\n\n\n    var declarationReference = generateDeclarationReference( // keep css custom properties as lower-cased props\n    property.indexOf('--') === 0 ? property : camelCaseProperty(property), value, pseudo, media, support);\n    cache[declarationReference] = generateCacheEntry(RULE_TYPE, className, property, value, pseudo, media, support, specificityPrefix);\n  }\n\n  return cache;\n}","map":{"version":3,"sources":["C:/Users/jophy/Documents/god-frontend-code-test/node_modules/fela-dom/es/dom/rehydration/rehydrateRules.js"],"names":["_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","value","length","err","Array","isArray","Object","TypeError","RULE_TYPE","generateDeclarationReference","camelCaseProperty","generateCacheEntry","escapeRegExp","string","replace","regexMap","getRegex","specificityPrefix","RegExp","rehydrateRules","css","media","arguments","support","cache","decl","DECL_REGEX","exec","_decl","_decl2","ruleSet","className","_","pseudo","property","declarationReference","indexOf"],"mappings":"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","sourcesContent":["var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nimport { RULE_TYPE, generateDeclarationReference } from 'fela-utils';\nimport { camelCaseProperty } from 'css-in-js-utils';\n\nimport generateCacheEntry from './generateCacheEntry';\n\n// Escaping for RegExp taken from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Escaping\nfunction escapeRegExp(string) {\n  return string.replace(/[.*+\\-?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\n// we reuse regexes for improved performance\nvar regexMap = {};\nfunction getRegex(specificityPrefix) {\n  if (!regexMap[specificityPrefix]) {\n    regexMap[specificityPrefix] = new RegExp(escapeRegExp(specificityPrefix) + '[.]([0-9a-z_-]+)([.][0-9a-z_-]+){0,}([^{]+)?{([^:]+):([^}]+)}', 'gi');\n  }\n\n  return regexMap[specificityPrefix];\n}\n\nexport default function rehydrateRules(css) {\n  var media = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var support = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var cache = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var specificityPrefix = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '';\n\n  var decl = void 0;\n  var DECL_REGEX = getRegex(specificityPrefix);\n\n  // This excellent parsing implementation was originally taken from Styletron and modified to fit Fela\n  // https://github.com/rtsao/styletron/blob/master/packages/styletron-client/src/index.js#L47\n  /* eslint-disable no-unused-vars,no-cond-assign */\n  while (decl = DECL_REGEX.exec(css)) {\n    // $FlowFixMe\n    var _decl = decl,\n        _decl2 = _slicedToArray(_decl, 6),\n        ruleSet = _decl2[0],\n        className = _decl2[1],\n        _ = _decl2[2],\n        pseudo = _decl2[3],\n        property = _decl2[4],\n        value = _decl2[5];\n    /* eslint-enable */\n\n    var declarationReference = generateDeclarationReference(\n    // keep css custom properties as lower-cased props\n    property.indexOf('--') === 0 ? property : camelCaseProperty(property), value, pseudo, media, support);\n\n    cache[declarationReference] = generateCacheEntry(RULE_TYPE, className, property, value, pseudo, media, support, specificityPrefix);\n  }\n\n  return cache;\n}"]},"metadata":{},"sourceType":"module"}