{"ast":null,"code":"import { arrayReduce } from 'fast-loops';\nexport function useForm() {\n  for (var _len = arguments.length, fields = new Array(_len), _key = 0; _key < _len; _key++) {\n    fields[_key] = arguments[_key];\n  }\n\n  function touchFields() {\n    fields.forEach(function (field) {\n      return field.touch();\n    });\n  }\n\n  function reset() {\n    fields.forEach(function (field) {\n      return field.update(field.initial);\n    });\n  }\n\n  function submit(onSubmit) {\n    var isValid = arrayReduce(fields, function (isValid, field) {\n      return isValid && field.isValid;\n    }, true);\n    var data = arrayReduce(fields, function (data, _ref) {\n      var value = _ref.value,\n          name = _ref.name;\n      data[name] = value;\n      return data;\n    }, {}); // if the form is invalid, we touch all fields to reveal the error messages\n\n    if (!isValid) {\n      touchFields();\n    }\n\n    onSubmit(isValid, data);\n  }\n\n  return {\n    touchFields: touchFields,\n    submit: submit,\n    reset: reset\n  };\n} // TODO: make this only available in development\n// for now we're fine due to code splitting though\n\nexport function useFormDebugger() {\n  for (var _len2 = arguments.length, fields = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    fields[_key2] = arguments[_key2];\n  }\n\n  var isValid = arrayReduce(fields, function (isValid, field) {\n    return isValid && field.isValid;\n  }, true);\n  var data = arrayReduce(fields, function (data, _ref2) {\n    var name = _ref2.name,\n        value = _ref2.value;\n    data[name] = value;\n    return data;\n  }, {});\n  var fieldData = arrayReduce(fields, function (data, _ref3) {\n    var name = _ref3.name,\n        value = _ref3.value,\n        isValid = _ref3.isValid,\n        isTouched = _ref3.isTouched,\n        isDisabled = _ref3.isDisabled,\n        isLoading = _ref3.isLoading,\n        errorMessage = _ref3.errorMessage;\n    data[name] = {\n      value: value,\n      isTouched: isTouched,\n      isValid: isValid,\n      isDisabled: isDisabled,\n      isLoading: isLoading,\n      errorMessage: errorMessage\n    };\n    return data;\n  }, {});\n  return {\n    data: data,\n    fields: fieldData,\n    isValid: isValid\n  };\n}","map":{"version":3,"sources":["C:/Users/jophy/Documents/god-frontend-code-test/node_modules/vcc-ui/es/use-form.js"],"names":["arrayReduce","useForm","_len","arguments","length","fields","Array","_key","touchFields","forEach","field","touch","reset","update","initial","submit","onSubmit","isValid","data","_ref","value","name","useFormDebugger","_len2","_key2","_ref2","fieldData","_ref3","isTouched","isDisabled","isLoading","errorMessage"],"mappings":"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","sourcesContent":["import { arrayReduce } from 'fast-loops';\nexport function useForm() {\n  for (var _len = arguments.length, fields = new Array(_len), _key = 0; _key < _len; _key++) {\n    fields[_key] = arguments[_key];\n  }\n\n  function touchFields() {\n    fields.forEach(function (field) {\n      return field.touch();\n    });\n  }\n\n  function reset() {\n    fields.forEach(function (field) {\n      return field.update(field.initial);\n    });\n  }\n\n  function submit(onSubmit) {\n    var isValid = arrayReduce(fields, function (isValid, field) {\n      return isValid && field.isValid;\n    }, true);\n    var data = arrayReduce(fields, function (data, _ref) {\n      var value = _ref.value,\n          name = _ref.name;\n      data[name] = value;\n      return data;\n    }, {}); // if the form is invalid, we touch all fields to reveal the error messages\n\n    if (!isValid) {\n      touchFields();\n    }\n\n    onSubmit(isValid, data);\n  }\n\n  return {\n    touchFields: touchFields,\n    submit: submit,\n    reset: reset\n  };\n} // TODO: make this only available in development\n// for now we're fine due to code splitting though\n\nexport function useFormDebugger() {\n  for (var _len2 = arguments.length, fields = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    fields[_key2] = arguments[_key2];\n  }\n\n  var isValid = arrayReduce(fields, function (isValid, field) {\n    return isValid && field.isValid;\n  }, true);\n  var data = arrayReduce(fields, function (data, _ref2) {\n    var name = _ref2.name,\n        value = _ref2.value;\n    data[name] = value;\n    return data;\n  }, {});\n  var fieldData = arrayReduce(fields, function (data, _ref3) {\n    var name = _ref3.name,\n        value = _ref3.value,\n        isValid = _ref3.isValid,\n        isTouched = _ref3.isTouched,\n        isDisabled = _ref3.isDisabled,\n        isLoading = _ref3.isLoading,\n        errorMessage = _ref3.errorMessage;\n    data[name] = {\n      value: value,\n      isTouched: isTouched,\n      isValid: isValid,\n      isDisabled: isDisabled,\n      isLoading: isLoading,\n      errorMessage: errorMessage\n    };\n    return data;\n  }, {});\n  return {\n    data: data,\n    fields: fieldData,\n    isValid: isValid\n  };\n}"]},"metadata":{},"sourceType":"module"}