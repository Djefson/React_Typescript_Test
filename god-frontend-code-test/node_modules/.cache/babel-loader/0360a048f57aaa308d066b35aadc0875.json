{"ast":null,"code":"var _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { prefix } from 'inline-style-prefixer';\nimport { prefix as stylisPrefix } from 'stylis';\nimport cssifyObject from 'css-in-js-utils/lib/cssifyObject';\nimport cssifyDeclaration from 'css-in-js-utils/lib/cssifyDeclaration';\nimport camelCaseProperty from 'css-in-js-utils/lib/camelCaseProperty';\nimport objectReduce from 'fast-loops/lib/objectReduce';\nimport fallbackValue from 'fela-plugin-fallback-value';\nimport isPlainObject from 'isobject';\nvar resolveFallbackValues = fallbackValue();\n\nfunction addVendorPrefixes(style) {\n  return objectReduce(style, function (prefixedStyle, value, property) {\n    if (isPlainObject(value)) {\n      prefixedStyle[property] = addVendorPrefixes(value);\n    } else {\n      var prefixedDeclaration = prefix(_defineProperty({}, property, style[property]));\n      var styleKeys = Object.keys(prefixedDeclaration);\n      var referenceProperty = styleKeys[0];\n      var referenceValue = prefixedDeclaration[referenceProperty];\n\n      if (styleKeys.length === 1) {\n        prefixedStyle[referenceProperty] = referenceValue;\n      } else {\n        delete prefixedDeclaration[referenceProperty];\n        var inlinedProperties = cssifyObject(resolveFallbackValues(prefixedDeclaration));\n        prefixedStyle[referenceProperty] = referenceValue + ';' + inlinedProperties;\n      }\n    }\n\n    return prefixedStyle;\n  }, {});\n}\n\naddVendorPrefixes.optimized = function (props) {\n  var cssDeclaration = cssifyDeclaration(props.property, props.value) + ';';\n  var prefixed = stylisPrefix(cssDeclaration, props.property.length);\n\n  if (prefixed !== cssDeclaration) {\n    var _prefixed$split = prefixed.split(/:(.+)/),\n        _prefixed$split2 = _slicedToArray(_prefixed$split, 2),\n        property = _prefixed$split2[0],\n        value = _prefixed$split2[1]; // TODO: do we really need to camelCase here?\n\n\n    props.property = camelCaseProperty(property);\n    props.value = value.slice(0, -1);\n  }\n\n  return props;\n};\n\nexport default (function () {\n  return addVendorPrefixes;\n});","map":{"version":3,"sources":["C:/Users/jophy/Documents/god-frontend-code-test/node_modules/fela-plugin-prefixer/es/index.js"],"names":["_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","value","length","err","Array","isArray","Object","TypeError","_defineProperty","obj","key","defineProperty","enumerable","configurable","writable","prefix","stylisPrefix","cssifyObject","cssifyDeclaration","camelCaseProperty","objectReduce","fallbackValue","isPlainObject","resolveFallbackValues","addVendorPrefixes","style","prefixedStyle","property","prefixedDeclaration","styleKeys","keys","referenceProperty","referenceValue","inlinedProperties","optimized","props","cssDeclaration","prefixed","_prefixed$split","split","_prefixed$split2","slice"],"mappings":"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","sourcesContent":["var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { prefix } from 'inline-style-prefixer';\nimport { prefix as stylisPrefix } from 'stylis';\nimport cssifyObject from 'css-in-js-utils/lib/cssifyObject';\nimport cssifyDeclaration from 'css-in-js-utils/lib/cssifyDeclaration';\nimport camelCaseProperty from 'css-in-js-utils/lib/camelCaseProperty';\nimport objectReduce from 'fast-loops/lib/objectReduce';\n\nimport fallbackValue from 'fela-plugin-fallback-value';\nimport isPlainObject from 'isobject';\n\nvar resolveFallbackValues = fallbackValue();\n\nfunction addVendorPrefixes(style) {\n  return objectReduce(style, function (prefixedStyle, value, property) {\n    if (isPlainObject(value)) {\n      prefixedStyle[property] = addVendorPrefixes(value);\n    } else {\n      var prefixedDeclaration = prefix(_defineProperty({}, property, style[property]));\n      var styleKeys = Object.keys(prefixedDeclaration);\n\n      var referenceProperty = styleKeys[0];\n      var referenceValue = prefixedDeclaration[referenceProperty];\n\n      if (styleKeys.length === 1) {\n        prefixedStyle[referenceProperty] = referenceValue;\n      } else {\n        delete prefixedDeclaration[referenceProperty];\n        var inlinedProperties = cssifyObject(resolveFallbackValues(prefixedDeclaration));\n\n        prefixedStyle[referenceProperty] = referenceValue + ';' + inlinedProperties;\n      }\n    }\n\n    return prefixedStyle;\n  }, {});\n}\n\naddVendorPrefixes.optimized = function (props) {\n  var cssDeclaration = cssifyDeclaration(props.property, props.value) + ';';\n  var prefixed = stylisPrefix(cssDeclaration, props.property.length);\n\n  if (prefixed !== cssDeclaration) {\n    var _prefixed$split = prefixed.split(/:(.+)/),\n        _prefixed$split2 = _slicedToArray(_prefixed$split, 2),\n        property = _prefixed$split2[0],\n        value = _prefixed$split2[1];\n    // TODO: do we really need to camelCase here?\n\n\n    props.property = camelCaseProperty(property);\n    props.value = value.slice(0, -1);\n  }\n\n  return props;\n};\n\nexport default (function () {\n  return addVendorPrefixes;\n});"]},"metadata":{},"sourceType":"module"}