{"ast":null,"code":"import PropTypes from 'prop-types';\n/**\n\tWe need to create our own version of this, as it's\n\tnot possible to combine out-of-the-box PropTypes\n\twith custom function validators.\n*/\n\nexport var oneOf = function oneOf(validTypes) {\n  return function (props, propName, componentName) {\n    if (validTypes.indexOf(props[propName]) === -1) {\n      return new Error(\"Invalid prop supplied to '\".concat(componentName, \"'. Must be one of ['\").concat(validTypes.join(\"', '\"), \"'].\"));\n    }\n  };\n};\nexport var ruleType = PropTypes.oneOfType([PropTypes.object, PropTypes.func]);\nexport var responsiveProp = PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.object, PropTypes.string, PropTypes.number]);\nexport var responsiveNumberProp = PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.object, PropTypes.number]);\nexport var responsiveStringProp = PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.object, PropTypes.string]);","map":{"version":3,"sources":["C:/Users/jophy/Documents/god-frontend-code-test/node_modules/vcc-ui/es/prop-types.js"],"names":["PropTypes","oneOf","validTypes","props","propName","componentName","indexOf","Error","concat","join","ruleType","oneOfType","object","func","responsiveProp","arrayOf","number","string","responsiveNumberProp","responsiveStringProp"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA;;;;;;AAMA,OAAO,IAAIC,KAAK,GAAG,SAASA,KAAT,CAAeC,UAAf,EAA2B;AAC5C,SAAO,UAAUC,KAAV,EAAiBC,QAAjB,EAA2BC,aAA3B,EAA0C;AAC/C,QAAIH,UAAU,CAACI,OAAX,CAAmBH,KAAK,CAACC,QAAD,CAAxB,MAAwC,CAAC,CAA7C,EAAgD;AAC9C,aAAO,IAAIG,KAAJ,CAAU,6BAA6BC,MAA7B,CAAoCH,aAApC,EAAmD,sBAAnD,EAA2EG,MAA3E,CAAkFN,UAAU,CAACO,IAAX,CAAgB,MAAhB,CAAlF,EAA2G,KAA3G,CAAV,CAAP;AACD;AACF,GAJD;AAKD,CANM;AAOP,OAAO,IAAIC,QAAQ,GAAGV,SAAS,CAACW,SAAV,CAAoB,CAACX,SAAS,CAACY,MAAX,EAAmBZ,SAAS,CAACa,IAA7B,CAApB,CAAf;AACP,OAAO,IAAIC,cAAc,GAAGd,SAAS,CAACW,SAAV,CAAoB,CAACX,SAAS,CAACe,OAAV,CAAkBf,SAAS,CAACW,SAAV,CAAoB,CAACX,SAAS,CAACgB,MAAX,EAAmBhB,SAAS,CAACiB,MAA7B,CAApB,CAAlB,CAAD,EAA+EjB,SAAS,CAACY,MAAzF,EAAiGZ,SAAS,CAACiB,MAA3G,EAAmHjB,SAAS,CAACgB,MAA7H,CAApB,CAArB;AACP,OAAO,IAAIE,oBAAoB,GAAGlB,SAAS,CAACW,SAAV,CAAoB,CAACX,SAAS,CAACe,OAAV,CAAkBf,SAAS,CAACgB,MAA5B,CAAD,EAAsChB,SAAS,CAACY,MAAhD,EAAwDZ,SAAS,CAACgB,MAAlE,CAApB,CAA3B;AACP,OAAO,IAAIG,oBAAoB,GAAGnB,SAAS,CAACW,SAAV,CAAoB,CAACX,SAAS,CAACe,OAAV,CAAkBf,SAAS,CAACiB,MAA5B,CAAD,EAAsCjB,SAAS,CAACY,MAAhD,EAAwDZ,SAAS,CAACiB,MAAlE,CAApB,CAA3B","sourcesContent":["import PropTypes from 'prop-types';\n/**\n\tWe need to create our own version of this, as it's\n\tnot possible to combine out-of-the-box PropTypes\n\twith custom function validators.\n*/\n\nexport var oneOf = function oneOf(validTypes) {\n  return function (props, propName, componentName) {\n    if (validTypes.indexOf(props[propName]) === -1) {\n      return new Error(\"Invalid prop supplied to '\".concat(componentName, \"'. Must be one of ['\").concat(validTypes.join(\"', '\"), \"'].\"));\n    }\n  };\n};\nexport var ruleType = PropTypes.oneOfType([PropTypes.object, PropTypes.func]);\nexport var responsiveProp = PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.object, PropTypes.string, PropTypes.number]);\nexport var responsiveNumberProp = PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.object, PropTypes.number]);\nexport var responsiveStringProp = PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.object, PropTypes.string]);"]},"metadata":{},"sourceType":"module"}