"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Legacy = exports.Labelled = exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _ = require("./");

var _flex = require("../flex");

var _text = require("../text");

var _spacer = require("../spacer");

var _default = {
  title: 'TextArea'
};
exports.default = _default;

var DisplayWrapper = function DisplayWrapper(_ref) {
  var name = _ref.name,
      children = _ref.children;
  return /*#__PURE__*/_react.default.createElement(_flex.Flex, {
    extend: {
      padding: 20,
      paddingRight: 40,
      minWidth: 300
    }
  }, /*#__PURE__*/_react.default.createElement(_text.Text, null, name), /*#__PURE__*/_react.default.createElement(_spacer.Spacer, {
    size: 0.5
  }), children);
};

var Labelled = function Labelled() {
  function TextAreaWithValue(_ref2) {
    var _ref2$defaultValue = _ref2.defaultValue,
        defaultValue = _ref2$defaultValue === void 0 ? '' : _ref2$defaultValue,
        disabled = _ref2.disabled,
        isValid = _ref2.isValid,
        errorMessage = _ref2.errorMessage,
        description = _ref2.description,
        loading = _ref2.loading;
    return /*#__PURE__*/_react.default.createElement(_.TextArea, {
      disabled: disabled,
      label: "Label",
      name: "test",
      loading: loading,
      onChange: function onChange() {},
      description: description,
      errorMessage: errorMessage,
      placeholder: "e.g., Placeholder",
      value: defaultValue,
      isValid: isValid
    });
  }

  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_flex.Flex, {
    extend: {
      flexDirection: 'row',
      paddingBottom: 20
    }
  }, /*#__PURE__*/_react.default.createElement(DisplayWrapper, {
    name: "Empty"
  }, /*#__PURE__*/_react.default.createElement(TextAreaWithValue, null)), /*#__PURE__*/_react.default.createElement(DisplayWrapper, {
    name: "Filled"
  }, /*#__PURE__*/_react.default.createElement(TextAreaWithValue, {
    defaultValue: "Entry"
  })), /*#__PURE__*/_react.default.createElement(DisplayWrapper, {
    name: "Loading"
  }, /*#__PURE__*/_react.default.createElement(TextAreaWithValue, {
    defaultValue: "Entry",
    loading: true
  }))), /*#__PURE__*/_react.default.createElement(_flex.Flex, {
    extend: {
      flexDirection: 'row',
      paddingBottom: 20
    }
  }, /*#__PURE__*/_react.default.createElement(DisplayWrapper, {
    name: "Empty - Error"
  }, /*#__PURE__*/_react.default.createElement(TextAreaWithValue, {
    isValid: false,
    errorMessage: "This is an error.",
    description: "I'm a helper text."
  })), /*#__PURE__*/_react.default.createElement(DisplayWrapper, {
    name: "Filled - Error"
  }, /*#__PURE__*/_react.default.createElement(TextAreaWithValue, {
    defaultValue: "Entry",
    isValid: false,
    errorMessage: "This is an error."
  })), /*#__PURE__*/_react.default.createElement(DisplayWrapper, {
    name: "Loading - Error"
  }, /*#__PURE__*/_react.default.createElement(TextAreaWithValue, {
    defaultValue: "Entry",
    loading: true,
    isValid: false,
    errorMessage: "This is an error."
  }))), /*#__PURE__*/_react.default.createElement(_flex.Flex, {
    extend: {
      flexDirection: 'row',
      paddingBottom: 20
    }
  }, /*#__PURE__*/_react.default.createElement(DisplayWrapper, {
    name: "Empty - Disabled"
  }, /*#__PURE__*/_react.default.createElement(TextAreaWithValue, {
    disabled: true,
    description: "I'm a helper text."
  })), /*#__PURE__*/_react.default.createElement(DisplayWrapper, {
    name: "Filled - Disabled"
  }, /*#__PURE__*/_react.default.createElement(TextAreaWithValue, {
    defaultValue: "Entry",
    disabled: true
  })), /*#__PURE__*/_react.default.createElement(DisplayWrapper, {
    name: "Loading - Disabled"
  }, /*#__PURE__*/_react.default.createElement(TextAreaWithValue, {
    defaultValue: "Entry",
    loading: true,
    disabled: true
  }))));
};

exports.Labelled = Labelled;

var Legacy = function Legacy() {
  function TextAreaWithValue(_ref3) {
    var _ref3$defaultValue = _ref3.defaultValue,
        defaultValue = _ref3$defaultValue === void 0 ? '' : _ref3$defaultValue,
        disabled = _ref3.disabled,
        isValid = _ref3.isValid,
        errorMessage = _ref3.errorMessage,
        description = _ref3.description;
    return /*#__PURE__*/_react.default.createElement(_.TextArea, {
      disabled: disabled,
      onChange: function onChange() {},
      errorMessage: errorMessage,
      description: description,
      placeholder: "e.g., Placeholder",
      value: defaultValue,
      isValid: isValid
    });
  }

  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_flex.Flex, {
    extend: {
      flexDirection: 'row',
      paddingBottom: 20
    }
  }, /*#__PURE__*/_react.default.createElement(DisplayWrapper, {
    name: "Empty"
  }, /*#__PURE__*/_react.default.createElement(TextAreaWithValue, null)), /*#__PURE__*/_react.default.createElement(DisplayWrapper, {
    name: "Filled"
  }, /*#__PURE__*/_react.default.createElement(TextAreaWithValue, {
    defaultValue: "Entry"
  }))), /*#__PURE__*/_react.default.createElement(_flex.Flex, {
    extend: {
      flexDirection: 'row',
      paddingBottom: 20
    }
  }, /*#__PURE__*/_react.default.createElement(DisplayWrapper, {
    name: "Empty - Error"
  }, /*#__PURE__*/_react.default.createElement(TextAreaWithValue, {
    isValid: false,
    errorMessage: "with error text",
    description: "and helper text"
  })), /*#__PURE__*/_react.default.createElement(DisplayWrapper, {
    name: "Filled - Error"
  }, /*#__PURE__*/_react.default.createElement(TextAreaWithValue, {
    defaultValue: "Entry",
    isValid: false,
    errorMessage: "with error text"
  }))), /*#__PURE__*/_react.default.createElement(_flex.Flex, {
    extend: {
      flexDirection: 'row',
      paddingBottom: 20
    }
  }, /*#__PURE__*/_react.default.createElement(DisplayWrapper, {
    name: "Empty - Disabled"
  }, /*#__PURE__*/_react.default.createElement(TextAreaWithValue, {
    disabled: true
  })), /*#__PURE__*/_react.default.createElement(DisplayWrapper, {
    name: "Filled - Disabled"
  }, /*#__PURE__*/_react.default.createElement(TextAreaWithValue, {
    defaultValue: "Entry",
    description: "with helper",
    disabled: true
  }))));
};

exports.Legacy = Legacy;