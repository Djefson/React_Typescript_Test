"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Col = Col;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _reactFela = require("react-fela");

var _flex = require("../flex");

var _propTypes = _interopRequireDefault(require("prop-types"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var ColContext = /*#__PURE__*/(0, _react.createContext)();
var styles = {
  column: function column(_ref) {
    var _ref2;

    var theme = _ref.theme,
        _ref$sizes = _ref.sizes,
        defaultSize = _ref$sizes.default,
        otherSizes = (0, _objectWithoutProperties2.default)(_ref$sizes, ["default"]);
    return _ref2 = {
      boxSizing: 'border-box',
      flexBasis: "".concat(defaultSize / 4 * 100, "%"),
      maxWidth: "".concat(defaultSize / 4 * 100, "%"),
      paddingLeft: theme.baselineGrid,
      paddingRight: theme.baselineGrid
    }, (0, _defineProperty2.default)(_ref2, theme.breakpoints.fromL, {
      flexBasis: "".concat(defaultSize / 12 * 100, "%"),
      maxWidth: "".concat(defaultSize / 12 * 100, "%"),
      paddingLeft: theme.baselineGrid * 1.5,
      paddingRight: theme.baselineGrid * 1.5
    }), (0, _defineProperty2.default)(_ref2, "extend", [{
      condition: otherSizes[theme.breakpoints.fromM],
      style: (0, _defineProperty2.default)({}, theme.breakpoints.onlyM, {
        flexBasis: "".concat(otherSizes[theme.breakpoints.fromM] / 4 * 100, "%"),
        maxWidth: "".concat(otherSizes[theme.breakpoints.fromM] / 4 * 100, "%")
      })
    }, {
      condition: otherSizes[theme.breakpoints.fromL],
      style: (0, _defineProperty2.default)({}, theme.breakpoints.fromL, {
        flexBasis: "".concat(otherSizes[theme.breakpoints.fromL] / 12 * 100, "%"),
        maxWidth: "".concat(otherSizes[theme.breakpoints.fromL] / 12 * 100, "%")
      })
    }]), _ref2;
  }
};

function getSizes(size, theme) {
  if (typeof size === 'number') {
    return (0, _defineProperty2.default)({
      default: 4
    }, theme.breakpoints.fromL, size);
  }

  return _objectSpread({
    default: 4
  }, size);
}

function getRealSizes(size, contextSize, theme) {
  var sizes = getSizes(size, theme);

  if (!contextSize) {
    return sizes;
  }

  var availableSizes = getSizes(contextSize, theme);
  var realSizes = {};

  for (var key in sizes) {
    if (availableSizes[key]) {
      if (key === theme.breakpoints.fromL) {
        realSizes[key] = 12 / availableSizes[key] * sizes[key];
      } else {
        realSizes[key] = 4 / availableSizes[key] * sizes[key];
      }
    } else {
      realSizes[key] = sizes[key];
    }
  }

  return realSizes;
}

function resolveNamedBreakpoints(size, breakpoints) {
  if (typeof size === 'number') {
    return size;
  }

  return Object.keys(size).reduce(function (resolvedSize, key) {
    var breakpoint = breakpoints[key] || key;
    resolvedSize[breakpoint] = size[key];
    return resolvedSize;
  }, {});
}

function Col(_ref4) {
  var _ref4$size = _ref4.size,
      size = _ref4$size === void 0 ? {
    default: 4,
    '@media (min-width: 1024px)': 12
  } : _ref4$size,
      children = _ref4.children;

  var _useFela = (0, _reactFela.useFela)(),
      theme = _useFela.theme;

  var contextSize = (0, _react.useContext)(ColContext);
  var resolvedSize = resolveNamedBreakpoints(size, theme.breakpoints);
  var styleProps = {
    sizes: getRealSizes(resolvedSize, contextSize, theme),
    theme: theme
  };
  return /*#__PURE__*/_react.default.createElement(ColContext.Provider, {
    value: resolvedSize
  }, /*#__PURE__*/_react.default.createElement(_flex.Flex, {
    extend: styles.column(styleProps)
  }, children));
}

Col.propTypes = {
  /** Size of column */
  size: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number]),

  /** A JSX node */
  children: _propTypes.default.node
};