"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.buildTypeScale = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _merge = require("./merge");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
  Makes all sub-style variants inherit from the
  'standard' styling for that type scale.
*/
var buildTypeScale = function buildTypeScale(typeScale) {
  return Object.keys(typeScale).reduce(function (accumTypeScale, typeScaleKey) {
    var _typeScale$typeScaleK = typeScale[typeScaleKey],
        standard = _typeScale$typeScaleK.standard,
        subStyles = (0, _objectWithoutProperties2.default)(_typeScale$typeScaleK, ["standard"]);
    return _objectSpread(_objectSpread({}, accumTypeScale), {}, (0, _defineProperty2.default)({}, typeScaleKey, _objectSpread({
      standard: standard
    }, Object.keys(subStyles).reduce(function (accumVariants, subStyleKey) {
      return _objectSpread(_objectSpread({}, accumVariants), {}, (0, _defineProperty2.default)({}, subStyleKey, (0, _merge.merge)(standard, subStyles[subStyleKey])));
    }, {}))));
  }, {});
};

exports.buildTypeScale = buildTypeScale;