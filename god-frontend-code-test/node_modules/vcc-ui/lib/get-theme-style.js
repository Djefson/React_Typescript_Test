"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getThemeStyle = getThemeStyle;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _deprecate = require("./deprecate");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function getThemeStyle(component, theme) {
  var props = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  (0, _deprecate.deprecate)("Customising component: \"".concat(component, "\" via theme is deprecated and\n  will be removed in 3.x. We recommend that you create your own fork if you need\n  a custom component style."), theme.styles && typeof theme.styles[component] !== 'undefined');

  if (theme.styles && theme.styles[component]) {
    var componentStyle = theme.styles[component];

    if (typeof componentStyle === 'function') {
      return componentStyle(_objectSpread({
        theme: theme
      }, props));
    }

    return componentStyle;
  }

  return {};
}