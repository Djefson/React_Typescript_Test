import React from 'react';
import { TextArea } from './';
import { Flex } from '../flex';
import { Text } from '../text';
import { Spacer } from '../spacer';
export default {
  title: 'TextArea'
};

var DisplayWrapper = function DisplayWrapper(_ref) {
  var name = _ref.name,
      children = _ref.children;
  return /*#__PURE__*/React.createElement(Flex, {
    extend: {
      padding: 20,
      paddingRight: 40,
      minWidth: 300
    }
  }, /*#__PURE__*/React.createElement(Text, null, name), /*#__PURE__*/React.createElement(Spacer, {
    size: 0.5
  }), children);
};

export var Labelled = function Labelled() {
  function TextAreaWithValue(_ref2) {
    var _ref2$defaultValue = _ref2.defaultValue,
        defaultValue = _ref2$defaultValue === void 0 ? '' : _ref2$defaultValue,
        disabled = _ref2.disabled,
        isValid = _ref2.isValid,
        errorMessage = _ref2.errorMessage,
        description = _ref2.description,
        loading = _ref2.loading;
    return /*#__PURE__*/React.createElement(TextArea, {
      disabled: disabled,
      label: "Label",
      name: "test",
      loading: loading,
      onChange: function onChange() {},
      description: description,
      errorMessage: errorMessage,
      placeholder: "e.g., Placeholder",
      value: defaultValue,
      isValid: isValid
    });
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Flex, {
    extend: {
      flexDirection: 'row',
      paddingBottom: 20
    }
  }, /*#__PURE__*/React.createElement(DisplayWrapper, {
    name: "Empty"
  }, /*#__PURE__*/React.createElement(TextAreaWithValue, null)), /*#__PURE__*/React.createElement(DisplayWrapper, {
    name: "Filled"
  }, /*#__PURE__*/React.createElement(TextAreaWithValue, {
    defaultValue: "Entry"
  })), /*#__PURE__*/React.createElement(DisplayWrapper, {
    name: "Loading"
  }, /*#__PURE__*/React.createElement(TextAreaWithValue, {
    defaultValue: "Entry",
    loading: true
  }))), /*#__PURE__*/React.createElement(Flex, {
    extend: {
      flexDirection: 'row',
      paddingBottom: 20
    }
  }, /*#__PURE__*/React.createElement(DisplayWrapper, {
    name: "Empty - Error"
  }, /*#__PURE__*/React.createElement(TextAreaWithValue, {
    isValid: false,
    errorMessage: "This is an error.",
    description: "I'm a helper text."
  })), /*#__PURE__*/React.createElement(DisplayWrapper, {
    name: "Filled - Error"
  }, /*#__PURE__*/React.createElement(TextAreaWithValue, {
    defaultValue: "Entry",
    isValid: false,
    errorMessage: "This is an error."
  })), /*#__PURE__*/React.createElement(DisplayWrapper, {
    name: "Loading - Error"
  }, /*#__PURE__*/React.createElement(TextAreaWithValue, {
    defaultValue: "Entry",
    loading: true,
    isValid: false,
    errorMessage: "This is an error."
  }))), /*#__PURE__*/React.createElement(Flex, {
    extend: {
      flexDirection: 'row',
      paddingBottom: 20
    }
  }, /*#__PURE__*/React.createElement(DisplayWrapper, {
    name: "Empty - Disabled"
  }, /*#__PURE__*/React.createElement(TextAreaWithValue, {
    disabled: true,
    description: "I'm a helper text."
  })), /*#__PURE__*/React.createElement(DisplayWrapper, {
    name: "Filled - Disabled"
  }, /*#__PURE__*/React.createElement(TextAreaWithValue, {
    defaultValue: "Entry",
    disabled: true
  })), /*#__PURE__*/React.createElement(DisplayWrapper, {
    name: "Loading - Disabled"
  }, /*#__PURE__*/React.createElement(TextAreaWithValue, {
    defaultValue: "Entry",
    loading: true,
    disabled: true
  }))));
};
export var Legacy = function Legacy() {
  function TextAreaWithValue(_ref3) {
    var _ref3$defaultValue = _ref3.defaultValue,
        defaultValue = _ref3$defaultValue === void 0 ? '' : _ref3$defaultValue,
        disabled = _ref3.disabled,
        isValid = _ref3.isValid,
        errorMessage = _ref3.errorMessage,
        description = _ref3.description;
    return /*#__PURE__*/React.createElement(TextArea, {
      disabled: disabled,
      onChange: function onChange() {},
      errorMessage: errorMessage,
      description: description,
      placeholder: "e.g., Placeholder",
      value: defaultValue,
      isValid: isValid
    });
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Flex, {
    extend: {
      flexDirection: 'row',
      paddingBottom: 20
    }
  }, /*#__PURE__*/React.createElement(DisplayWrapper, {
    name: "Empty"
  }, /*#__PURE__*/React.createElement(TextAreaWithValue, null)), /*#__PURE__*/React.createElement(DisplayWrapper, {
    name: "Filled"
  }, /*#__PURE__*/React.createElement(TextAreaWithValue, {
    defaultValue: "Entry"
  }))), /*#__PURE__*/React.createElement(Flex, {
    extend: {
      flexDirection: 'row',
      paddingBottom: 20
    }
  }, /*#__PURE__*/React.createElement(DisplayWrapper, {
    name: "Empty - Error"
  }, /*#__PURE__*/React.createElement(TextAreaWithValue, {
    isValid: false,
    errorMessage: "with error text",
    description: "and helper text"
  })), /*#__PURE__*/React.createElement(DisplayWrapper, {
    name: "Filled - Error"
  }, /*#__PURE__*/React.createElement(TextAreaWithValue, {
    defaultValue: "Entry",
    isValid: false,
    errorMessage: "with error text"
  }))), /*#__PURE__*/React.createElement(Flex, {
    extend: {
      flexDirection: 'row',
      paddingBottom: 20
    }
  }, /*#__PURE__*/React.createElement(DisplayWrapper, {
    name: "Empty - Disabled"
  }, /*#__PURE__*/React.createElement(TextAreaWithValue, {
    disabled: true
  })), /*#__PURE__*/React.createElement(DisplayWrapper, {
    name: "Filled - Disabled"
  }, /*#__PURE__*/React.createElement(TextAreaWithValue, {
    defaultValue: "Entry",
    description: "with helper",
    disabled: true
  }))));
};