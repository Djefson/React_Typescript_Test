import React from 'react';
import PropTypes from 'prop-types';
import { useFela } from 'react-fela';
import { Flex } from '../flex';
var styles = {
  row: function row(_ref) {
    var theme = _ref.theme,
        align = _ref.align;
    return {
      boxSizing: 'border-box',
      justifyContent: align === 'center' ? 'center' : 'flex-' + align,
      marginLeft: -theme.baselineGrid,
      marginRight: -theme.baselineGrid,
      flexDirection: 'row',
      flexWrap: 'wrap',
      fromL: {
        marginLeft: theme.baselineGrid * -1.5,
        marginRight: theme.baselineGrid * -1.5
      }
    };
  }
};
export function Row(_ref2) {
  var children = _ref2.children,
      _ref2$align = _ref2.align,
      align = _ref2$align === void 0 ? 'start' : _ref2$align;

  var _useFela = useFela(),
      theme = _useFela.theme;

  var styleProps = {
    theme: theme,
    align: align
  };
  return /*#__PURE__*/React.createElement(Flex, {
    extend: styles.row(styleProps)
  }, children);
}
Row.propTypes = {
  /** Align columns */
  align: PropTypes.oneOf(['start', 'end', 'center']),

  /** A JSX node */
  children: PropTypes.node
};