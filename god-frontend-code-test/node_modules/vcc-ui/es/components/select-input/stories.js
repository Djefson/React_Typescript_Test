import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React from 'react';
import { SelectInput } from './';
import { Flex } from '../flex';
import { Text } from '../text';
import { Spacer } from '../spacer';
export default {
  title: 'SelectInput'
};

var DisplayWrapper = function DisplayWrapper(_ref) {
  var name = _ref.name,
      children = _ref.children;
  return /*#__PURE__*/React.createElement(Flex, {
    extend: {
      padding: 20,
      paddingRight: 40,
      minWidth: 300
    }
  }, /*#__PURE__*/React.createElement(Text, null, name), /*#__PURE__*/React.createElement(Spacer, {
    size: 0.5
  }), children);
};

export var Labelled = function Labelled() {
  function SelectInputWithValue(_ref2) {
    var _ref2$defaultValue = _ref2.defaultValue,
        defaultValue = _ref2$defaultValue === void 0 ? '' : _ref2$defaultValue,
        helperText = _ref2.helperText,
        errorText = _ref2.errorText,
        disabled = _ref2.disabled,
        loading = _ref2.loading,
        isValid = _ref2.isValid;
    return /*#__PURE__*/React.createElement(SelectInput, {
      disabled: disabled,
      loading: loading,
      name: "test",
      label: "Label",
      onChange: function onChange() {},
      errorMessage: errorText,
      description: helperText,
      value: defaultValue,
      isValid: isValid
    }, /*#__PURE__*/React.createElement("option", {
      value: "entry"
    }, "Entry"), /*#__PURE__*/React.createElement("option", {
      value: "c30",
      disabled: true
    }, "Volvo C30"), /*#__PURE__*/React.createElement("option", {
      value: "c70"
    }, "Volvo C70"), /*#__PURE__*/React.createElement("option", {
      value: "c90"
    }, "Volvo C90"), /*#__PURE__*/React.createElement("option", {
      value: "c40"
    }, "Volvo S40"), /*#__PURE__*/React.createElement("option", {
      value: "s60"
    }, "Volvo S60"), /*#__PURE__*/React.createElement("option", {
      value: "s80"
    }, "Volvo S80"), /*#__PURE__*/React.createElement("option", {
      value: "s90"
    }, "Volvo S90"));
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Flex, {
    extend: {
      flexDirection: 'row',
      paddingBottom: 20
    }
  }, /*#__PURE__*/React.createElement(DisplayWrapper, {
    name: "Empty"
  }, /*#__PURE__*/React.createElement(SelectInputWithValue, null)), /*#__PURE__*/React.createElement(DisplayWrapper, {
    name: "Filled"
  }, /*#__PURE__*/React.createElement(SelectInputWithValue, {
    defaultValue: "entry"
  })), /*#__PURE__*/React.createElement(DisplayWrapper, {
    name: "Loading"
  }, /*#__PURE__*/React.createElement(SelectInputWithValue, {
    loading: true,
    defaultValue: "entry"
  }))), /*#__PURE__*/React.createElement(Flex, {
    extend: {
      flexDirection: 'row',
      paddingBottom: 20
    }
  }, /*#__PURE__*/React.createElement(DisplayWrapper, {
    name: "Empty - Error"
  }, /*#__PURE__*/React.createElement(SelectInputWithValue, {
    isValid: false,
    errorText: "I'm an error text"
  })), /*#__PURE__*/React.createElement(DisplayWrapper, {
    name: "Filled - Error"
  }, /*#__PURE__*/React.createElement(SelectInputWithValue, {
    defaultValue: "entry",
    helperText: "I'm a helper text",
    errorText: "I'm an error text",
    isValid: false
  })), /*#__PURE__*/React.createElement(DisplayWrapper, {
    name: "Loading - Error"
  }, /*#__PURE__*/React.createElement(SelectInputWithValue, {
    loading: true,
    isValid: false,
    defaultValue: "entry"
  }))), /*#__PURE__*/React.createElement(Flex, {
    extend: {
      flexDirection: 'row',
      paddingBottom: 20
    }
  }, /*#__PURE__*/React.createElement(DisplayWrapper, {
    name: "Empty - Disabled"
  }, /*#__PURE__*/React.createElement(SelectInputWithValue, {
    disabled: true,
    helperText: "I'm a helper text"
  })), /*#__PURE__*/React.createElement(DisplayWrapper, {
    name: "Filled - Disabled"
  }, /*#__PURE__*/React.createElement(SelectInputWithValue, {
    defaultValue: "entry",
    disabled: true
  })), /*#__PURE__*/React.createElement(DisplayWrapper, {
    name: "Loading - Disabled"
  }, /*#__PURE__*/React.createElement(SelectInputWithValue, {
    loading: true,
    disabled: true,
    defaultValue: "entry"
  }))));
};
export var Legacy = function Legacy() {
  function SelectInputWithValue(_ref3) {
    var _ref3$defaultValue = _ref3.defaultValue,
        defaultValue = _ref3$defaultValue === void 0 ? '' : _ref3$defaultValue,
        helperText = _ref3.helperText,
        errorText = _ref3.errorText,
        disabled = _ref3.disabled,
        loading = _ref3.loading,
        isValid = _ref3.isValid;
    return /*#__PURE__*/React.createElement(SelectInput, {
      disabled: disabled,
      loading: loading,
      errorMessage: errorText,
      onChange: function onChange() {},
      description: helperText,
      placeholder: "e.g., Placeholder",
      value: defaultValue,
      isValid: isValid
    }, /*#__PURE__*/React.createElement("option", {
      value: "entry"
    }, "Entry"), /*#__PURE__*/React.createElement("option", {
      value: "c30",
      disabled: true
    }, "Volvo C30"), /*#__PURE__*/React.createElement("option", {
      value: "c70"
    }, "Volvo C70"), /*#__PURE__*/React.createElement("option", {
      value: "c90"
    }, "Volvo C90"), /*#__PURE__*/React.createElement("option", {
      value: "c40"
    }, "Volvo S40"), /*#__PURE__*/React.createElement("option", {
      value: "s60"
    }, "Volvo S60"), /*#__PURE__*/React.createElement("option", {
      value: "s80"
    }, "Volvo S80"), /*#__PURE__*/React.createElement("option", {
      value: "s90"
    }, "Volvo S90"));
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Flex, {
    extend: {
      flexDirection: 'row',
      paddingBottom: 20
    }
  }, /*#__PURE__*/React.createElement(DisplayWrapper, {
    name: "Empty"
  }, /*#__PURE__*/React.createElement(SelectInputWithValue, null)), /*#__PURE__*/React.createElement(DisplayWrapper, {
    name: "Filled"
  }, /*#__PURE__*/React.createElement(SelectInputWithValue, {
    defaultValue: "entry"
  })), /*#__PURE__*/React.createElement(DisplayWrapper, {
    name: "Loading"
  }, /*#__PURE__*/React.createElement(SelectInputWithValue, {
    loading: true,
    defaultValue: "entry"
  }))), /*#__PURE__*/React.createElement(Flex, {
    extend: {
      flexDirection: 'row',
      paddingBottom: 20
    }
  }, /*#__PURE__*/React.createElement(DisplayWrapper, {
    name: "Empty - Error"
  }, /*#__PURE__*/React.createElement(SelectInputWithValue, {
    isValid: false,
    errorText: "I'm an error"
  })), /*#__PURE__*/React.createElement(DisplayWrapper, {
    name: "Filled - Error"
  }, /*#__PURE__*/React.createElement(SelectInputWithValue, {
    defaultValue: "entry",
    isValid: false,
    helperText: "I'm a helper text",
    errorText: "I'm an error text"
  })), /*#__PURE__*/React.createElement(DisplayWrapper, {
    name: "Loading - Error"
  }, /*#__PURE__*/React.createElement(SelectInputWithValue, {
    loading: true,
    isValid: false,
    defaultValue: "entry"
  }))), /*#__PURE__*/React.createElement(Flex, {
    extend: {
      flexDirection: 'row',
      paddingBottom: 20
    }
  }, /*#__PURE__*/React.createElement(DisplayWrapper, {
    name: "Empty - Disabled"
  }, /*#__PURE__*/React.createElement(SelectInputWithValue, {
    disabled: true,
    helperText: "with helper"
  })), /*#__PURE__*/React.createElement(DisplayWrapper, {
    name: "Filled - Disabled"
  }, /*#__PURE__*/React.createElement(SelectInputWithValue, {
    defaultValue: "entry",
    disabled: true
  })), /*#__PURE__*/React.createElement(DisplayWrapper, {
    name: "Loading - Disabled"
  }, /*#__PURE__*/React.createElement(SelectInputWithValue, {
    loading: true,
    disabled: true,
    defaultValue: "entry"
  }))));
};
export var OptGroups = function OptGroups() {
  var Example = /*#__PURE__*/function (_React$Component) {
    _inherits(Example, _React$Component);

    var _super = _createSuper(Example);

    function Example() {
      var _this;

      _classCallCheck(this, Example);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _super.call.apply(_super, [this].concat(args));

      _defineProperty(_assertThisInitialized(_this), "state", {
        value: 's80'
      });

      _defineProperty(_assertThisInitialized(_this), "handleChange", function (e) {
        _this.setState({
          value: e.target.value
        });
      });

      return _this;
    }

    _createClass(Example, [{
      key: "render",
      value: function render() {
        return /*#__PURE__*/React.createElement(SelectInput, {
          value: this.state.value,
          onChange: this.handleChange
        }, /*#__PURE__*/React.createElement("optgroup", {
          label: "Berlin"
        }, /*#__PURE__*/React.createElement("option", {
          value: "c70"
        }, "Volvo C70"), /*#__PURE__*/React.createElement("option", {
          value: "c90"
        }, "Volvo C90")), /*#__PURE__*/React.createElement("optgroup", {
          label: "G\xF6teborg"
        }, /*#__PURE__*/React.createElement("option", {
          value: "s80"
        }, "Volvo S80"), /*#__PURE__*/React.createElement("option", {
          value: "s90"
        }, "Volvo S90")));
      }
    }]);

    return Example;
  }(React.Component);

  return /*#__PURE__*/React.createElement(Example, null);
};