import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React, { Component } from 'react';
import { Toggle } from './';
export default {
  title: 'Toggle'
};
export var Default = function Default() {
  var TogglingToggle = /*#__PURE__*/function (_Component) {
    _inherits(TogglingToggle, _Component);

    var _super = _createSuper(TogglingToggle);

    function TogglingToggle() {
      var _this;

      _classCallCheck(this, TogglingToggle);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _super.call.apply(_super, [this].concat(args));

      _defineProperty(_assertThisInitialized(_this), "state", {
        checked: false
      });

      return _this;
    }

    _createClass(TogglingToggle, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        return /*#__PURE__*/React.createElement(Toggle, {
          checked: this.state.checked,
          onChange: function onChange() {
            return _this2.setState({
              checked: !_this2.state.checked
            });
          }
        });
      }
    }]);

    return TogglingToggle;
  }(Component);

  return /*#__PURE__*/React.createElement(TogglingToggle, null);
};
export var Invalid = function Invalid() {
  return /*#__PURE__*/React.createElement(Toggle, {
    onChange: function onChange() {},
    isValid: false
  });
};
export var Disabled = function Disabled() {
  var TogglingToggle = /*#__PURE__*/function (_Component2) {
    _inherits(TogglingToggle, _Component2);

    var _super2 = _createSuper(TogglingToggle);

    function TogglingToggle() {
      var _this3;

      _classCallCheck(this, TogglingToggle);

      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      _this3 = _super2.call.apply(_super2, [this].concat(args));

      _defineProperty(_assertThisInitialized(_this3), "state", {
        checked: false
      });

      return _this3;
    }

    _createClass(TogglingToggle, [{
      key: "render",
      value: function render() {
        var _this4 = this;

        return /*#__PURE__*/React.createElement(Toggle, {
          disabled: true,
          checked: this.state.checked,
          onChange: function onChange() {
            return _this4.setState({
              checked: !_this4.state.checked
            });
          }
        });
      }
    }]);

    return TogglingToggle;
  }(Component);

  return /*#__PURE__*/React.createElement(TogglingToggle, null);
};