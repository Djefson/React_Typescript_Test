import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import React from 'react';
import PropTypes from 'prop-types';
import { useFela } from 'react-fela';
import { Block } from '../block';
import { getImagesSrc } from './helpers';
import { getThemeStyle } from '../../get-theme-style';
export var Logo = function Logo(_ref) {
  var type = _ref.type,
      height = _ref.height,
      props = _objectWithoutProperties(_ref, ["type", "height"]);

  var _useFela = useFela(),
      theme = _useFela.theme;

  var _getImagesSrc = getImagesSrc({
    type: type,
    theme: theme
  }),
      src = _getImagesSrc.src,
      srcSet = _getImagesSrc.srcSet;

  return /*#__PURE__*/React.createElement(Block, _extends({}, props, {
    as: "img",
    src: src,
    srcSet: srcSet,
    height: height,
    extend: {
      verticalAlign: 'middle',
      maxHeight: '100%',
      maxWidth: '100%',
      // this allows passing a function of theme
      // as a generic extension via theme
      extend: getThemeStyle('logo', theme)
    }
  }));
};
Logo.displayName = 'Logo';
Logo.propTypes = {
  /** Logo type */
  type: PropTypes.string,

  /** Apply custom height to logo image */
  height: PropTypes.number
};