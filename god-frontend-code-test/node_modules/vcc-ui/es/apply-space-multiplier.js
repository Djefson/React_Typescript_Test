import _typeof from "@babel/runtime/helpers/typeof";

function applyFactor(factor) {
  return function (value) {
    if (value === undefined || value === null) {
      return undefined;
    } // this allows stringy numbers e.g. <View paddingLeft="4" /> to be parsed and multiplied as well


    if (typeof value === 'string') {
      var parsedValue = parseInt(value, 10);
      return value == parsedValue ? parsedValue * factor : value;
    }

    if (typeof value !== 'number') {
      return value;
    }

    return value * factor;
  };
}

export function applySpaceMultiplier() {
  var factor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
  var applyFactorToValue = applyFactor(factor);
  return function (value) {
    if (Array.isArray(value)) {
      return value.map(applyFactorToValue);
    } else if (_typeof(value) === 'object') {
      return Object.keys(value).reduce(function (out, key) {
        out[key] = applyFactorToValue(value[key]);
        return out;
      }, {});
    }

    return applyFactorToValue(value);
  };
}