import PropTypes from 'prop-types';
/**
	We need to create our own version of this, as it's
	not possible to combine out-of-the-box PropTypes
	with custom function validators.
*/

export var oneOf = function oneOf(validTypes) {
  return function (props, propName, componentName) {
    if (validTypes.indexOf(props[propName]) === -1) {
      return new Error("Invalid prop supplied to '".concat(componentName, "'. Must be one of ['").concat(validTypes.join("', '"), "']."));
    }
  };
};
export var ruleType = PropTypes.oneOfType([PropTypes.object, PropTypes.func]);
export var responsiveProp = PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.object, PropTypes.string, PropTypes.number]);
export var responsiveNumberProp = PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.object, PropTypes.number]);
export var responsiveStringProp = PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.object, PropTypes.string]);